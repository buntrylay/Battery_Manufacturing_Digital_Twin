version: "3.8"

networks:
  app-net:
    driver: bridge

services:
  ## Frontend service
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - app-net
    depends_on:
      - fastapi

  ##` Backend service
  fastapi:
    build:
      context: ./backend
    container_name: fastapi
    ports:
      - "8000:8000"
    volumes:
      - .:/workspaces/app
    working_dir: /workspaces/app
    depends_on:
      - db
    networks:
      - app-net

  ## Database service - using postgresql
  db:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
  ## Grafana service
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    networks:
      - app-net

    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_PLUGINS_ALLOW_UNSIGNED=true
      - GF_SECURITY_ALLOW_EMBEDDING=true

volumes:
  postgres_data:
  grafana-storage: {}
